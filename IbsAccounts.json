{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "IBSO Accounts API. Сервис для работы с счетами АБИС",
    "description": "API для работы со счетами АБИС IBSO",
    "contact": {
      "name": "BANK RBK API team",
      "email": "apiteam@bankrbk.kz",
      "url": "http://www.bankrbk.kz"
    }
  },
  "host": "10.1.1.114",
  "basePath": "/v1/ibsoaccounts",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://10.1.1.114/oauth/token",
      "scopes": {
        "ibsoAccounts:read": "Чтение данных по счетам"
      }
    }
  },
  "security": [
    {
      "oauth": [
        "ibsoAccounts:read"
      ]
    }
  ],
  "paths": {
    "/{id}": {
      "get": {
        "tags": [
          "Счет АБИС"
        ],
        "summary": "Получение счета АБИС по ИД",
        "description": "Получение счета АБИС по его уникальному идентификатору",
        "operationId": "getIbsAccountByID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращает объект счета АБИС",
            "schema": {
              "$ref": "#/definitions/IbsAccount"
            }
          },
          "400": {
            "description": "Invalid Input",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/accountNumber/{no}": {
      "get": {
        "tags": [
          "Счет АБИС"
        ],
        "summary": "Получение счета АБИС по его номеру",
        "description": "Получение счета АБИС по его номеру",
        "operationId": "getIbsAccountByNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountNumberFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращает объект счета АБИС",
            "schema": {
              "$ref": "#/definitions/IbsAccount"
            }
          },
          "400": {
            "description": "Invalid Input",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/{id}/blocks": {
      "get": {
        "tags": [
          "Блокировки счета"
        ],
        "summary": "Блокировки (аресты) установленные на счете",
        "description": "Получение блокировок (арестов) на счете из АБИС",
        "operationId": "getIbsAccountBlocks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращает массив объектов блокировок (арестов) на счете",
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "$ref": "#/definitions/AccBlock"
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/customers/{clientno}": {
      "get": {
        "tags": [
          "Счета Клиента"
        ],
        "summary": "Счета клиента",
        "description": "Получение счетов клиента из АБИС",
        "operationId": "getCustomerIbsAccounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientno",
            "in": "path",
            "description": "Идентификатор клиента (clientno)",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "$ref": "#/parameters/productTypeFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращает массив объектов счетов АБИС",
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "$ref": "#/definitions/IbsAccount"
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "productTypeFilters": {
      "name": "productType",
      "in": "query",
      "required": false,
      "description": "Фильтр по продукту счета",
      "type": "array",
      "uniqueItems": true,
      "collectionFormat": "csv",
      "items": {
        "type": "string",
        "enum": [
          "RKO",
          "PR_CRED",
          "DEPN",
          "GUARANTIES"
        ]
      }
    },
    "accountIdFilter": {
      "name": "id",
      "in": "path",
      "description": "ИД счета",
      "required": true,
      "type": "integer",
      "format": "int64",
      "minimum": 0,
      "exclusiveMinimum": true
    },
    "accountNumberFilter": {
      "name": "no",
      "in": "path",
      "description": "Номер счета (старые номера и IBAN)",
      "required": true,
      "type": "string",
      "minLength": 14,
      "maxLength": 20,
      "pattern": "[A-Za-z0-9]{14,20}"
    }
  },
  "definitions": {
    "Division": {
      "type": "object",
      "description": "Отделение привязанное к счету",
      "properties": {
        "divisionType": {
          "type": "string",
          "description": "Тип отделения",
          "minLength": 1
        },
        "index": {
          "type": "string",
          "description": "Внутренний индекс отделения",
          "minLength": 1
        },
        "code": {
          "type": "string",
          "description": "код отделения для процессинга",
          "minLength": 1
        },
        "institute": {
          "type": "string",
          "description": "фин. институт для процессинга",
          "minLength": 1
        },
        "no": {
          "type": "string",
          "description": "номер",
          "minLength": 1
        },
        "parent": {
          "type": "string",
          "description": "Родительский индекс отделения",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "description": "Наименование отделения",
          "minLength": 1
        }
      },
      "required": [
        "divisionType",
        "index",
        "name"
      ]
    },
    "Agreement": {
      "type": "object",
      "description": "Принадлежность счета к договору (соглашению)",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Уникальный идентификатор",
          "format": "int64",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "number": {
          "type": "string",
          "description": "Номер соглашения (договора)",
          "minLength": 1
        },
        "startDate": {
          "type": "string",
          "description": "Дата открытия",
          "format": "date",
          "minLength": 10,
          "maxLength": 10
        },
        "endDate": {
          "type": "string",
          "description": "Дата завершения",
          "format": "date",
          "minLength": 10,
          "maxLength": 10
        },
        "closed": {
          "type": "string",
          "description": "Дата закрытия",
          "format": "date",
          "minLength": 10,
          "maxLength": 10
        },
        "product": {
          "type": "object",
          "description": "Продукт договора",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код продукта",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "description": "Наименование продукта",
              "minLength": 1
            }
          },
          "required": [
            "code",
            "name"
          ]
        },
        "parent": {
          "type": "object",
          "description": "Родительский договор (в рамках данного соглашения открыт потомок. Например мультивалютный депозит)",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Уникальный идентификатор договора родителя",
              "format": "int64",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "number": {
              "type": "string",
              "description": "Номер соглашения (договора)",
              "minLength": 1
            }
          },
          "required": [
            "id",
            "number"
          ]
        }
      },
      "required": [
        "id",
        "number",
        "startDate",
        "product"
      ]
    },
    "AccBlock": {
      "type": "object",
      "description": "Блокировка (Арест)",
      "properties": {
        "id": {
          "type": "string",
          "description": "Идентификатор блокировки",
          "minLength": 1
        },
        "operation": {
          "type": "string",
          "description": "Вид операции для блокировки (D-дебетование, С-кредитование, A -дебет и кредит)",
          "enum": [
            "D",
            "C",
            "A"
          ]
        },
        "startDate": {
          "type": "string",
          "description": "Дата блокировки",
          "format": "date",
          "minLength": 10,
          "maxLength": 10
        },
        "disposal": {
          "type": "string",
          "description": "Номер распоряжения",
          "minLength": 1
        },
        "isTotal": {
          "type": "boolean",
          "description": "Признак полной/не полной блокировки (арест на сумму)"
        },
        "amount": {
          "type": "number",
          "description": "Сумма блокировки, если isTotal=false (арест на сумму)",
          "format": "double",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "operation",
        "startDate",
        "isTotal"
      ]
    },
    "IbsAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Уникальный идентификатор счета",
          "format": "int64",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "no": {
          "type": "string",
          "description": "Номер счета (старые номера и IBAN (KZ[0-9]{5}[A-Za-z0-9]{13}))",
          "minLength": 14,
          "maxLength": 20,
          "pattern": "[A-Za-z0-9]{14,20}"
        },
        "clientno": {
          "type": "string",
          "description": "Сквозной идентификатор клиента",
          "minLength": 1
        },
        "currency": {
          "type": "string",
          "description": "Буквенный код валюты (KZT, USD, EUR и т.д.)",
          "minLength": 3,
          "maxLength": 3,
          "pattern": "[A-Z]{3}"
        },
        "balance": {
          "type": "number",
          "description": "Остаток на счете",
          "format": "double"
        },
        "available": {
          "type": "number",
          "description": "Доступный остаток",
          "format": "double"
        },
        "minBalance": {
          "type": "number",
          "description": "Минимальный неснижаемый остаток",
          "format": "double"
        },
        "debitAllowed": {
          "type": "boolean",
          "description": "Разрешено дебетование счета"
        },
        "creditAllowed": {
          "type": "boolean",
          "description": "Разрешено кредитование счета"
        },
        "productType": {
          "type": "string",
          "description": "Продукт счета (RKO-Текущие счета, DEPN-Депозитные счета, PR_CRED-Кредитные счета, GUARANTIES-Счета гарантий)",
          "enum": [
            "RKO",
            "PR_CRED",
            "DEPN",
            "GUARANTIES"
          ]
        },
        "productName": {
          "type": "string",
          "description": "Наименование продукта счета"
        },
        "name": {
          "type": "string",
          "description": "Наименование счета",
          "minLength": 1
        },
        "opened": {
          "type": "string",
          "description": "Дата открытия счета",
          "format": "date",
          "minLength": 10,
          "maxLength": 10
        },
        "closed": {
          "type": "string",
          "description": "Дата закрытия счета",
          "format": "date",
          "minLength": 10,
          "maxLength": 10
        },
        "ledger": {
          "type": "string",
          "description": "Баланс певого порядка"
        },
        "subledger": {
          "type": "string",
          "description": "Баланс второго порядка"
        },
        "productRelation": {
          "type": "object",
          "description": "Отношение счета к продукту",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код отношения к продукту"
            },
            "name": {
              "type": "string",
              "description": "Наименование отношения к продукту"
            }
          }
        },
        "purpose": {
          "type": "object",
          "description": "Целевое назначение",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код целевого назначения"
            },
            "name": {
              "type": "string",
              "description": "Наименование целевого назначения"
            }
          }
        },
        "division": {
          "$ref": "#/definitions/Division"
        },
        "agreement": {
          "$ref": "#/definitions/Agreement"
        }
      },
      "required": [
        "id",
        "no",
        "clientno",
        "currency",
        "opened",
        "productType",
        "productName",
        "name",
        "balance",
        "available",
        "debitAllowed",
        "creditAllowed"
      ]
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "Код ошибки",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "description": "Тип ошибки. validation - ошибка бизнес логики. exception - техническая ошибка",
          "enum": [
            "validation",
            "exception"
          ]
        },
        "message": {
          "type": "string",
          "description": "Текст ошибки",
          "minLength": 0
        },
        "details": {
          "type": "string",
          "description": "Детали ошибки. Опционально",
          "minLength": 0
        }
      },
      "required": [
        "code",
        "type",
        "message"
      ]
    },
    "Errors": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}